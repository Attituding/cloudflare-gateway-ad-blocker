name: "Terraform"

on:
  push:
  schedule:
    - cron: '0 0 */7 * *'
  workflow_dispatch:

jobs:
  format:
    if: github.event_name == 'push'
    name: "Format Files"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Format
        if: steps.fmt.outcome == 'failure'
        run: terraform fmt

      - name: Create Pull Request
        if: steps.fmt.outcome == 'failure'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Update Terraform Format'
          branch: 'create-pull-request/terraform-format'
          commit-message: 'Update Terraform Format'
          delete-branch: true
          body: 'Format Terraform files'

  update:
    if: github.event_name != 'push'
    name: "Update Hosts"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Generate Terraform Parameters
        id: params
        run: |
          params="params=-var=cf_api_token=${{ secrets.CF_API_TOKEN }} -var=cf_account_id=${{ vars.CF_ACCOUNT_ID }}"

          if [ "${{ vars.HOSTS_URLS }}" != "" ]; then
            params+=" -var=hosts_urls=${{ vars.HOSTS_URLS }}"
          fi
          
          if [ "${{ vars.HOSTS_INVALID }}" != "" ]; then
            params+=" -var=hosts_invalid=${{ vars.HOSTS_INVALID }}"
          fi

          echo $params >> $GITHUB_OUTPUT

      - name: Terraform Plan
        run: terraform plan -no-color -input=false ${{ steps.params.outputs.params }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false ${{ steps.params.outputs.params }}