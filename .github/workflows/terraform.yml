name: "Terraform"

on:
  push:
  schedule:
    - cron: '0 0 */7 * *'
  workflow_dispatch:

jobs:
  format:
    if: github.event_name == 'push'
    name: "Format Files"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Check Terraform Configuration Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Format Terraform Configuration
        if: steps.fmt.outcome == 'failure'
        run: terraform fmt

      - name: Create Pull Request
        if: steps.fmt.outcome == 'failure'
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Update Terraform Format'
          branch: 'create-pull-request/terraform-format'
          commit-message: 'Update Terraform Format'
          delete-branch: true
          body: 'Format Terraform files'

  update:
    name: "Update Hosts"
    runs-on: ubuntu-latest
    steps:
      - name: Scan Push Changes
        if: github.event_name == 'push'
        id: changes
        uses: masesgroup/retrieve-changed-files@v2

      - name: Process Push Changes
        if: github.event_name == 'push'
        id: process
        run: |
          if [[ "${{ steps.changes.outputs.all }}" != *".tf"* ]]; then
            echo "status=skip" >> $GITHUB_OUTPUT
          fi

      - name: Checkout Branch
        if: steps.process.outputs.status != 'skip'
        uses: actions/checkout@v3

      - name: Setup Terraform
        if: steps.process.outputs.status != 'skip'
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Init Terraform
        if: steps.process.outputs.status != 'skip'
        run: terraform init
      
      - name: Validate Terraform Configuration
        if: steps.process.outputs.status != 'skip'
        run: terraform validate -no-color

      - name: Generate Terraform Parameters
        if: steps.process.outputs.status != 'skip'
        id: params
        run: |
          params="params=-var='cf_api_token=${{ secrets.CF_API_TOKEN }}' -var='cf_account_id=${{ vars.CF_ACCOUNT_ID }}'"

          if [ '${{ vars.HOSTS_URLS }}' != "" ]; then
            params+=' -var='\''hosts_urls=${{ vars.HOSTS_URLS }}'\'''
          fi
          
          if [ '${{ vars.HOSTS_INVALID }}' != "" ]; then
            params+=' -var='\''hosts_invalid=${{ vars.HOSTS_INVALID }}'\'''
          fi

          echo $params >> $GITHUB_OUTPUT

      - name: Execute Terraform Configuration
        if: steps.process.outputs.status != 'skip'
        run: terraform apply -auto-approve -input=false ${{ steps.params.outputs.params }}